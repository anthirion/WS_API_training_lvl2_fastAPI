---
# Play sur la db
- name: MySQL installation and configuration
  hosts: dbForAttendees
  become: true

  # Le role suivant installe et configure MySQL
  roles:
    - role: geerlingguy.mysql
      become: true

  vars_files:
    - geerlingguy.mysql/defaults/main.yml

  vars_prompt:
    - name: participant_count
      prompt: "How many participants are there in the training?"
      private: false

  tasks:
    - name: Mettre à jour la liste des paquets apt
      ansible.builtin.apt:
        update_cache: true

    - name: Autoriser les connexions MySQL depuis n'importe quelle machine
      ansible.builtin.lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address\s*='
        line: 'bind-address = 0.0.0.0'
      notify: Restart MySQL

    - name: Copier le script de configuration de la DB
      ansible.builtin.copy:
        src: ../mysql-init/init.sql
        dest: ./init.sql
        # Donner les droits de lecture, écriture et d'exécution au script
        mode: "u=rx,g=r,o=r"

    - name: >
        Configurer autant de db qu'il y a de participants.
        S'il y a n participants, cette tâche créée api_training_1, api_training_2, ..., api_training_n
        bdd avec les tables définies dans init.sql
      ansible.builtin.shell:
        sed 's/api_training/api_training_{{ item }}/g' ./init.sql | mysql -u {{ mysql_user_name }} -p{{ mysql_user_password }}
      with_sequence: start=1 end={{ participant_count }} stride=1 format=%02d
      tags: test

  handlers:
  - name: Restart MySQL
    ansible.builtin.service:
      name: mysql
      state: restarted

