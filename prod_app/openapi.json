{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome",
        "operationId": "welcome__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get All Products",
        "description": "Retourne un tableau JSON contenant les produits avec leurs détails",
        "operationId": "get_all_products_products_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Name"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tListe des produits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "title": "Response Get All Products Products Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Product",
        "description": "Ajouter un nouveau produit",
        "operationId": "add_product_products_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBase"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produit ajouté",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "409": {
            "description": "Produit déjà existant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "summary": "Get Product By Id",
        "description": "Retourne un objet JSON contenant les détails d'un produit spécifique",
        "operationId": "get_product_by_id_products__product_id__get",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tDétails du produit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Produit introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Modify Product",
        "description": "Modifier un produit existant",
        "operationId": "modify_product_products__product_id__put",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produit mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Produit introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Product",
        "description": "Supprimer un produit",
        "operationId": "delete_product_products__product_id__delete",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produit supprimé"
          },
          "404": {
            "description": "Produit introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Retourne un tableau JSON contenant les utilisateurs avec leurs détails",
        "operationId": "get_all_users_admin_users_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tListe des utilisateurs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Get All Users Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "summary": "Get User By Id",
        "description": "Retourne un objet JSON contenant les détails d'un utilisateur spécifique",
        "operationId": "get_user_by_id_admin_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tDétails de l'utilisateur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Modify User",
        "description": "Modifier un utilisateur existant",
        "operationId": "modify_user_admin_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Utilisateur mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Supprimer un utilisateur",
        "operationId": "delete_user_admin_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Utilisateur supprimé"
          },
          "404": {
            "description": "Utilisateur introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Add User",
        "description": "Ajouter un nouveau utilisateur",
        "operationId": "add_user_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Utilisateur ajouté",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Utilisateur déjà existant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "summary": "Get All Orders",
        "description": "Retourne un tableau JSON contenant les commandes avec leurs détails",
        "operationId": "get_all_orders_admin_orders_get",
        "responses": {
          "200": {
            "description": "\tListe des commandes",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "type": "array",
                  "title": "Response Get All Orders Admin Orders Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Order",
        "description": "Ajouter une nouvelle commande",
        "operationId": "add_order_admin_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Commande ajoutée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "409": {
            "description": "Commande déjà existante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "400": {
            "description": "Commande incorrecte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/{order_id}": {
      "get": {
        "summary": "Get Order By Id",
        "description": "Retourne un objet JSON contenant les détails d'une commande spécifique",
        "operationId": "get_order_by_id_admin_orders__order_id__get",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tDétails de la commande",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Commande introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Modify Order",
        "description": "Modifier une commande existante",
        "operationId": "modify_order_admin_orders__order_id__put",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Commande mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Commande introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "400": {
            "description": "Commande incorrecte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Order",
        "description": "Supprimer une commande",
        "operationId": "delete_order_admin_orders__order_id__delete",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Commande supprimée"
          },
          "404": {
            "description": "Commande introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorMessage": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ErrorMessage",
        "description": "Defines a model for API responses in case of an error"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Item": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "ordered_quantity": {
            "type": "integer",
            "title": "Ordered Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "ordered_quantity",
          "unit_price"
        ],
        "title": "Item",
        "description": "This class represents an ordered product in an order. It has all the attributes of a product,\nplus an ordered quantity"
      },
      "Order": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "items",
          "total",
          "status",
          "id"
        ],
        "title": "Order",
        "description": "This class adds the id attribute to the OrderBase class. It is useful for all operations\nexcluding PUT."
      },
      "OrderBase": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "items",
          "total",
          "status"
        ],
        "title": "OrderBase",
        "description": "A base class defining base order attributes. It defines all attributes except id.\nThis class is used for operations that do not need id (the product provided in the body\nof a PUT operation do not have id)"
      },
      "Product": {
        "properties": {
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0.0
          },
          "category": {
            "type": "string",
            "title": "Category",
            "default": ""
          },
          "stock": {
            "type": "integer",
            "title": "Stock",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "Product",
        "description": "This class adds the id attribute to the ProductBase class. It is useful for all operations\nexcluding PUT."
      },
      "ProductBase": {
        "properties": {
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0.0
          },
          "category": {
            "type": "string",
            "title": "Category",
            "default": ""
          },
          "stock": {
            "type": "integer",
            "title": "Stock",
            "default": 0
          }
        },
        "type": "object",
        "title": "ProductBase",
        "description": "A base class defining base product attributes. It defines all attributes except id.\nThis class is used for operations that do not need id (the product provided in the body\nof a PUT operation do not have id)"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "address",
          "password",
          "id"
        ],
        "title": "User",
        "description": "This class adds the id attribute to the UserBase class. It is useful for all operations\nexcluding PUT."
      },
      "UserBase": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "address",
          "password"
        ],
        "title": "UserBase",
        "description": "A base class defining base user attributes. It defines all attributes except id.\nThis class is used for operations that do not need id (the product provided in the body\nof a PUT operation do not have id)"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}